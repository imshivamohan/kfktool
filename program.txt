CREATE TABLE config (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    api_key VARCHAR(255) NOT NULL,
    api_secret VARCHAR(255) NOT NULL,
    schema_api_key VARCHAR(255) NOT NULL,
    schema_api_secret VARCHAR(255) NOT NULL,
    schema_url VARCHAR(255) NOT NULL,
    bootstrap_server VARCHAR(255) NOT NULL
);


import psycopg2

# Establish a connection to the PostgreSQL database
conn = psycopg2.connect(
    host="your_host",
    database="your_database",
    user="your_user",
    password="your_password"
)

# Create a cursor object to execute SQL queries
cur = conn.cursor()

def save_config(username, password, api_key, api_secret, schema_api_key, schema_api_secret, schema_url, bootstrap_server):
    # Define the SQL query to insert the data
    sql = """
    INSERT INTO config (username, password, api_key, api_secret, schema_api_key, schema_api_secret, schema_url, bootstrap_server)
    VALUES (%s, %s, %s, %s, %s, %s, %s, %s);
    """

    # Execute the SQL query with the provided data
    cur.execute(sql, (username, password, api_key, api_secret, schema_api_key, schema_api_secret, schema_url, bootstrap_server))

    # Commit the changes to the database
    conn.commit()

# Call the save_config function with the appropriate values
save_config("JohnDoe", "password123", "api_key", "api_secret", "schema_api_key", "schema_api_secret", "schema_url", "bootstrap_server")

# Close the cursor and the database connection
cur.close()
conn.close()
