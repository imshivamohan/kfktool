from confluent_kafka import Producer, KafkaException
from confluent_kafka.schema_registry import SchemaRegistryClient
import json

# Set your Kafka broker URL
bootstrap_servers = 'your_kafka_broker_url:9093'

# Set the SASL username and password for Kafka
sasl_username = 'kafka_apikey'
sasl_password = 'kafka_apipass'

# Set the Schema Registry URL
schema_registry_url = 'http://your_schema_registry_url'

# Set the API key and password for Schema Registry
schema_registry_api_key = 'schema_apikey'
schema_registry_api_secret = 'schema_apipass'

# Create the Schema Registry client with basic authentication
schema_registry_client = SchemaRegistryClient({
    'url': schema_registry_url,
    'basic.auth.credentials.source': 'USER_INFO',
    'basic.auth.user.info': f'{schema_registry_api_key}:{schema_registry_api_secret}'
})

# Retrieve the latest schema for the topic value from the Schema Registry
subject_name = topic_name + '-value'
latest_schema = schema_registry_client.get_latest_version(subject_name)

# Create the Kafka producer configuration with SASL and SSL
producer_config = {
    'bootstrap.servers': bootstrap_servers,
    'security.protocol': 'SASL_SSL',
    'ssl.ca.location': '/path/to/ca.crt',  # Path to your CA certificate file
    'ssl.key.location': '/path/to/client.key',  # Path to your client key file
    'ssl.certificate.location': '/path/to/client.crt',  # Path to your client certificate file
    'sasl.mechanism': 'PLAIN',
    'sasl.username': sasl_username,
    'sasl.password': sasl_password,
    'key.serializer': 'org.apache.kafka.common.serialization.StringSerializer',
    'value.serializer': 'io.confluent.kafka.serializers.KafkaAvroSerializer',
    'schema.registry.url': schema_registry_url,
    'schema.registry.basic.auth.user.info': f'{schema_registry_api_key}:{schema_registry_api_secret}'
}

# Create the Kafka producer instance
producer = Producer(producer_config)

# Define your JSON event
json_event = {
    "key": "your_key",
    "value": {
        "field1": "value1",
        "field2": 123
    }
}

# Serialize the JSON event using the latest schema from the Schema Registry
serialized_event = schema_registry_client.serialize_record_with_schema(latest_schema, json_event)

# Send the JSON event to the Kafka topic
try:
    producer.produce(topic=topic_name, key='your_key', value=serialized_event)
    producer.flush()
    print("Event sent successfully.")
except KafkaException as e:
    print(f"Failed to send event: {str(e)}")

# Close the producer
producer.close()
