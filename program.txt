import json
from azure.identity import DefaultAzureCredential
from azure.keyvault.secrets import SecretClient
from azure.keyvault.keys import KeyClient
from azure.keyvault.keys.crypto import CryptographyClient, EncryptionAlgorithm

vault_url = "https://<your-vault-name>.vault.azure.net"
credential = DefaultAzureCredential()
secret_client = SecretClient(vault_url=vault_url, credential=credential)
key_client = KeyClient(vault_url=vault_url, credential=credential)

def encrypt_field(plaintext, encryption_key):
    crypto_client = CryptographyClient(encryption_key, credential)
    ciphertext = crypto_client.encrypt(EncryptionAlgorithm.rsa_oaep, json.dumps(plaintext).encode("utf-8"))
    return ciphertext.ciphertext

def decrypt_field(ciphertext, encryption_key):
    crypto_client = CryptographyClient(encryption_key, credential)
    plaintext = crypto_client.decrypt(EncryptionAlgorithm.rsa_oaep, ciphertext)
    return json.loads(plaintext.plaintext.decode("utf-8"))

original_json = {
    "name": "Modi",
    "age": 66
}

print("Original JSON:")
print(original_json)

# Generate a new encryption key in Azure Key Vault
key_name = "my-encryption-key"  # Specify a name for the encryption key
key_type = "RSA"  # Specify the type of the encryption key
key_size = 2048  # Specify the size of the encryption key

key_operation = key_client.create_key(key_name, key_type, size=key_size)
encryption_key = key_operation.key

encrypted_name = encrypt_field(original_json["name"], encryption_key)
encrypted_age = encrypt_field(original_json["age"], encryption_key)

encrypted_json = {
    "encrypted_name": encrypted_name.decode("utf-8"),
    "encrypted_age": encrypted_age.decode("utf-8")
}

print("\nEncrypted JSON:")
print(encrypted_json)

decrypted_name = decrypt_field(encrypted_name, encryption_key)
decrypted_age = decrypt_field(encrypted_age, encryption_key)

original_json["name"] = decrypted_name
original_json["age"] = decrypted_age

print("\nDecrypted JSON:")
print(original_json)
