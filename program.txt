import csv
import os
import requests
import json

# Function to fetch the JSON schema from the Confluent Schema Registry
def fetch_schema(schema_url, schema_api_key, schema_api_secret, topic):
    headers = {
        "Content-Type": "application/vnd.schemaregistry.v1+json",
        "Accept": "application/vnd.schemaregistry.v1+json",
        "Authorization": f"Basic {schema_api_key}:{schema_api_secret}"
    }
    url = f"{schema_url}/subjects/{topic}/versions/latest"
    response = requests.get(url, headers=headers)
    return response.json()

def save_config(config_data):
    fieldnames = list(config_data.keys())

    # Remove existing config file if it exists
    if os.path.exists('config.csv'):
        os.remove('config.csv')

    with open('config.csv', 'w', newline='') as file:
        writer = csv.DictWriter(file, fieldnames=fieldnames)

        # Write the header row
        writer.writeheader()

        # Write the config data
        writer.writerow(config_data)

    return 'Configuration saved successfully!'

def get_config():
    config_data = {}

    with open('config.csv', 'r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            config_data = row

    return config_data

def get_schema(topic):
    config_data = get_config()

    # Extract required values
    username = config_data.get('Username')
    password = config_data.get('Password')
    api_key = config_data.get('API Key')
    api_secret = config_data.get('API Secret')
    schema_api_key = config_data.get('Schema API Key')
    schema_api_secret = config_data.get('Schema API Secret')
    schema_url = config_data.get('Schema URL')
    bootstrap_server = config_data.get('Bootstrap Server')

    # Fetch JSON schema from Schema Registry
    response = fetch_schema(schema_url, schema_api_key, schema_api_secret, topic)
    return response

# Example usage

# Save configuration
config_data = {
    'Username': 'your_username',
    'Password': 'your_password',
    'API Key': 'your_api_key',
    'API Secret': 'your_api_secret',
    'Schema API Key': 'your_schema_api_key',
    'Schema API Secret': 'your_schema_api_secret',
    'Schema URL': 'your_schema_url',
    'Bootstrap Server': 'your_bootstrap_server'
}
save_config(config_data)

# Get configuration
config_data = get_config()
print(config_data)

# Get schema for a topic
topic = 'your_topic'
schema = get_schema(topic)
print(schema)
