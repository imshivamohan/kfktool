import requests
import logging

def fetch_schema(schema_url, schema_api_key, schema_api_secret, topic):
    headers = {
        "Content-Type": "application/vnd.schemaregistry.v1+json",
        "Accept": "application/vnd.schemaregistry.v1+json",
        "Authorization": f"Basic {schema_api_key}:{schema_api_secret}"
    }
    url = f"{schema_url}/subjects/{topic}/versions/latest"

    # Configure logging
    logging.basicConfig(level=logging.DEBUG)
    logger = logging.getLogger(__name__)

    logger.debug(f"Fetching schema for topic: {topic}")
    logger.debug(f"URL: {url}")
    logger.debug(f"Headers: {headers}")

    response = requests.get(url, headers=headers)

    logger.debug(f"Response status code: {response.status_code}")
    logger.debug(f"Response content: {response.content}")

    try:
        response.raise_for_status()
        return response.json()
    except requests.exceptions.HTTPError as e:
        logger.error(f"Error fetching schema: {e}")
        return None
