from flask import Flask, render_template, request
import psycopg2

# Create a Flask web application
app = Flask(__name__)

# Establish a connection to the PostgreSQL database
conn = psycopg2.connect(
    host="your_host",
    database="your_database",
    user="your_user",
    password="your_password"
)

# Define the route for the setconfig page
@app.route('/setconfig', methods=['GET', 'POST'])
def setconfig():
    if request.method == 'POST':
        # Get the form data
        username = request.form['username']
        password = request.form['password']
        api_key = request.form['api_key']
        api_secret = request.form['api_secret']
        schema_api_key = request.form['schema_api_key']
        schema_api_secret = request.form['schema_api_secret']
        schema_url = request.form['schema_url']
        bootstrap_server = request.form['bootstrap_server']

        # Save the config to the database
        save_config(username, password, api_key, api_secret, schema_api_key, schema_api_secret, schema_url, bootstrap_server)

        # Redirect to a success page or perform any other action
        return 'Config saved successfully!'
    else:
        # Render the setconfig.html template
        return render_template('setconfig.html')

def save_config(username, password, api_key, api_secret, schema_api_key, schema_api_secret, schema_url, bootstrap_server):
    # Create a cursor object to execute SQL queries
    cur = conn.cursor()

    # Define the SQL query to insert the data
    sql = """
    INSERT INTO config (username, password, api_key, api_secret, schema_api_key, schema_api_secret, schema_url, bootstrap_server)
    VALUES (%s, %s, %s, %s, %s, %s, %s, %s);
    """

    # Execute the SQL query with the provided data
    cur.execute(sql, (username, password, api_key, api_secret, schema_api_key, schema_api_secret, schema_url, bootstrap_server))

    # Commit the changes to the database
    conn.commit()

    # Close the cursor
    cur.close()

if __name__ == '__main__':
    app.run()
